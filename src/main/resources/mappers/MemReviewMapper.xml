<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.githrd.project.dao.MemReviewMapper">

  <!-- 회원 전체 리뷰 조회(관리자 용) -->
  <select id="selectList" resultType="MemReviewVo">
     select * from mem_review order by mem_idx
  </select>

  <!-- 회원 리뷰 조회 -->
  
  <select id="selectOneFromIdx" resultType="MemReviewVo">
     select * from delivery WHERE mem_idx = #{mem_idx} and order_idx = #{order_idx}
  </select>



  <!-- 아이디 조회 -->
  <select id="selectListId" resultType="MemReviewVo">
     select * from mem_review WHERE mem_idx = #{mem_idx}
  </select>


  <!-- 해당 가게 리뷰 조회 -->
  <select id="selectListShop" resultType="MemReviewVo">
     select * from mem_review WHERE shop_idx = #{shop_idx}
  </select>

  <!-- 해당 가게 리뷰 cnt 조회 -->
   <select id="selectCountReview" resultType="int">
      select count(*) from mem_review where shop_idx = #{shop_idx}
   </select>

  <select id="selectShopRating" parameterType="int" resultType="MemReviewVo">
      select review_rating from mem_review where shop_idx = #{shop_idx}
  </select>
  

  <!-- 가게 리뷰 메뉴 이름 조회 -->
  <select id="selectMenu" resultType="MemReviewVo">
      SELECT d.mem_idx,d.order_idx,d.delivery_idx,m.menu_name,d.order_status,s.shop_name
      FROM delivery d
      INNER JOIN menu_info m ON d.menu_idx = m.menu_idx
      INNER JOIN shop_info s ON d.shop_idx = s.shop_idx
      WHERE mem_idx = #{mem_idx} AND order_idx = #{order_idx}
  </select>


  <!-- 가게 리뷰 가게 이름 조회 -->
  <select id="selectShopName" resultType="MemReviewVo">
   SELECT shop_name 

   FROM delivery d INNER JOIN shop_info s ON d.shop_idx = s.shop_idx

   WHERE mem_idx = #{mem_idx} AND order_idx = #{order_idx}
  </select>

  <!-- 리뷰 등록 -->
  <insert id="insert" parameterType="MemReviewVo">
     insert into mem_review values(
                          null,
                          #{mem_idx},
                          #{order_idx},
                          #{shop_idx},
                          #{delivery_idx},
                          #{mem_nickname},
                          #{shop_name},
                          #{menu_name},
                          #{review_content},
                          now(),
                          null,
                          #{review_rating},
                          #{review_img},
                          1,
                          #{review_ip}
                          )
  </insert>

  <!-- 리뷰 수정 -->
  <update id="update" parameterType="MemReviewVo">
     update mem_review set review_content   = #{review_content},
                           review_update    = now()

     where mem_idx=#{ mem_idx }
  </update>

    <!-- 사장님 답글 등록시 상태 변경 -->
  <update id="updateReply" parameterType="int">
     update mem_review set review_available = 2

     where review_idx = #{review_idx}
  </update>



<!-- association 1:1 매핑 -->
<resultMap id="ReviewWithReplyResultMap" type="MemReviewVo" >
    <result property="review_idx" column="review_idx"/>


   <association property="owner_reply" 
                column="re_idx=review_idx"
                select="selectOwnerReply"  />




</resultMap>

<select id="selectOwnerReply"   resultType="OwnerReplyVo">
  
  select * from owner_reply where review_idx=#{re_idx}

</select>



  <!--가게 회원 리뷰 + 사장 답글 -->
<select id="selectReviewReply" resultMap="ReviewWithReplyResultMap">
SELECT 
    m.review_idx AS review_idx,
    m.mem_idx AS mem_idx,
    m.order_idx AS order_idx,
    m.shop_idx AS shop_idx,
    m.delivery_idx AS delivery_idx,
    m.mem_nickname AS mem_nickname,
    m.review_content AS review_content,
    m.review_regdate AS review_regdate,
    m.review_update AS review_update,
    m.review_rating AS review_rating,
    m.review_img AS review_img,
    m.review_ip AS review_ip,
    m.review_available AS review_available,
    m.menu_name AS menu_name,
    m.shop_name AS shop_name,
    o.owner_idx AS o_owner_idx,
    o.owner_reply_idx AS o_owner_reply_idx,
    o.reply_content AS reply_content,
    o.reply_available AS reply_available
FROM mem_review m LEFT JOIN owner_reply o ON m.order_idx = o.order_idx
WHERE m.shop_idx = #{shop_idx}
ORDER BY m.review_idx DESC

</select>

<!-- 회원 마이페이지 리뷰 + 답글 -->
<select id="selectMemberReviewReply" resultMap="ReviewWithReplyResultMap">
SELECT 
    m.review_idx AS review_idx,
    m.mem_idx AS mem_idx,
    m.order_idx AS order_idx,
    m.shop_idx AS shop_idx,
    m.delivery_idx AS delivery_idx,
    m.mem_nickname AS mem_nickname,
    m.review_content AS review_content,
    m.review_regdate AS review_regdate,
    m.review_update AS review_update,
    m.review_rating AS review_rating,
    m.review_img AS review_img,
    m.review_ip AS review_ip,
    m.review_available AS review_available,
    m.menu_name AS menu_name,
    m.shop_name AS shop_name,
    o.owner_reply_idx AS o_owner_reply_idx,
    o.reply_content AS reply_content,
    o.reply_available AS reply_available
FROM mem_review m LEFT JOIN owner_reply o ON m.order_idx = o.order_idx
WHERE m.mem_idx = #{mem_idx}
ORDER BY m.review_idx DESC
</select>

</mapper>
